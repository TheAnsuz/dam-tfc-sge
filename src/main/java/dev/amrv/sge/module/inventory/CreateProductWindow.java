/*
 */
package dev.amrv.sge.module.inventory;

import dev.amrv.sge.SGE;
import dev.amrv.sge.module.inventory.model.AttributeTuple;
import dev.amrv.sge.module.inventory.model.FloatAttributeTuple;
import dev.amrv.sge.module.providers.Provider;
import dev.amrv.sge.window.SGENotifier;
import dev.amrv.sge.window.component.StrictTextField;
import java.awt.Component;
import java.sql.SQLException;
import java.util.Map.Entry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author Adrian Martin Ruiz del Valle Aka. Ansuz
 */
public class CreateProductWindow extends javax.swing.JDialog {

    private final ProductTableModel tableModel;
    private final DefaultComboBoxModel<Provider> comboModel;
    private final SGE sge;
    private InventoryProduct actualProduct;

    public CreateProductWindow(SGE sge, Component parent) {
        this.sge = sge;
        comboModel = new DefaultComboBoxModel<>();
        tableModel = new ProductTableModel();
        initComponents();
        inputAttributesTable.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            buttonTableDelete.setEnabled(e.getFirstIndex() >= 0);
        });
        super.setModal(true);

        super.setLocationRelativeTo(parent);
        SwingUtilities.getRootPane(buttonAccept).setDefaultButton(buttonAccept);
    }

    public InventoryProduct getCreatedProduct() {
        return actualProduct;
    }

    public void insertDefaultAttributes() {
        tableModel.add(new FloatAttributeTuple("coste_compra"));
        tableModel.add(new FloatAttributeTuple("coste_venta"));
    }

    public void displayCategory(InventoryCategory category) {
        super.setTitle("Crear nuevo producto");
        clearProduct();
        inputCategoryName.setText(category.getName());
        actualProduct = InventoryProduct.createLocal("", category.getID(), -1, 0);
        insertDefaultAttributes();
    }

    public void displayProduct(InventoryProduct product) throws SQLException {
        super.setTitle("Modificar " + product.getName());

        actualProduct = product;
        inputCategoryName.setText(InventoryCategory.get(sge.getDatabase(), product.getCategoryID()).getName());
        inputProductID.setText(product.getID() + "");
        inputProductName.setText(product.getName());
        inputProviderID.setText(Provider.get(sge.getDatabase(), product.getProviderID()).getName());
        inputAmount.setText(product.getAmount() + "");

        tableModel.clear();
        insertDefaultAttributes();
        for (Entry<String, InventoryAttribute> entry : InventoryAttribute.getAll(sge.getDatabase(), product).entrySet())
            tableModel.add(entry.getKey(), entry.getValue().getValue());
    }

    public void clearProduct() {
        actualProduct = null;
        inputCategoryName.setText("");
        inputProductID.setText("??");
        inputProductName.setText("");
        inputProviderName.setSelectedIndex(-1);
        inputProviderID.setText("??");
        inputAmount.setText("0");
        tableModel.clear();
    }

    public void updateProviders() throws SQLException {
        comboModel.removeAllElements();

        for (Provider provider : Provider.getAll(sge.getDatabase()))
            comboModel.addElement(provider);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        inputProductID = new javax.swing.JTextField();
        inputProductName = new javax.swing.JTextField();
        inputCategoryName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputProviderID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputAttributesTable = new AttributeTable();
        buttonTableDelete = new javax.swing.JButton();
        buttonTableNew = new javax.swing.JButton();
        buttonAccept = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        inputProviderName = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        inputAmount = new StrictTextField("","\\d+");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear nuevo producto");

        jLabel1.setText("Categoria");

        inputProductID.setEditable(false);

        inputCategoryName.setEditable(false);

        jLabel2.setText("Producto");

        jLabel3.setText("Provedor");

        inputProviderID.setEditable(false);

        jLabel4.setText("Atributos");

        inputAttributesTable.setModel(tableModel);
        inputAttributesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        inputAttributesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        inputAttributesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(inputAttributesTable);

        buttonTableDelete.setText("Eliminar");
        buttonTableDelete.setEnabled(false);
        buttonTableDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTableDeleteActionPerformed(evt);
            }
        });

        buttonTableNew.setText("Nuevo");
        buttonTableNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTableNewActionPerformed(evt);
            }
        });

        buttonAccept.setText("Aceptar");
        buttonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAcceptActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancelar");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        inputProviderName.setModel(comboModel);
        inputProviderName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputProviderNameActionPerformed(evt);
            }
        });

        jLabel5.setText("Cantidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(inputProviderID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputProviderName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(inputProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(inputProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addComponent(inputCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(267, 267, 267)
                                        .addComponent(jLabel5))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonTableDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonTableNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputProviderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputProviderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonTableDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonTableNew)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCancel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(buttonAccept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputProviderNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputProviderNameActionPerformed
        int index = inputProviderName.getSelectedIndex();

        if (index == -1)
            return;

        Provider selectedProvider = comboModel.getElementAt(index);

        inputProviderID.setText(selectedProvider.getID() + "");
    }//GEN-LAST:event_inputProviderNameActionPerformed

    private void buttonTableNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTableNewActionPerformed
        if (actualProduct == null)
            return;

        tableModel.add(JOptionPane.showInputDialog(this, "Nombre del atributo"));
    }//GEN-LAST:event_buttonTableNewActionPerformed

    private void buttonTableDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTableDeleteActionPerformed
        int row = inputAttributesTable.getSelectedRow();

        if (row == -1)
            return;

        tableModel.remove(row);
        buttonTableDelete.setEnabled(false);
    }//GEN-LAST:event_buttonTableDeleteActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        clearProduct();
        super.setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAcceptActionPerformed
        actualProduct.setName(inputProductName.getText());

        if (inputProviderName.getSelectedIndex() == -1) {
            SGENotifier.displayError(this, "Error creando producto", "No se ha elegido un provedor valido");
            return;
        }

        int amount;

        try {
            amount = Integer.parseInt(inputAmount.getText().trim());
        } catch (NumberFormatException nfe) {
            SGENotifier.displayError(this, "Error creando producto", "No se ha introducido una cantidad correcta");
            return;
        }

        // Validate all tuples
        for (AttributeTuple tuple : tableModel.getAll()) {
            if (!tuple.isValid()) {
                SGENotifier.displayError(this, "Error en los atributos del producto", "El valor del atributo " + tuple.getKey() + " no es valido");
                return;
            }
        }

        Provider selectedProvider = comboModel.getElementAt(inputProviderName.getSelectedIndex());
        actualProduct.setProviderID(selectedProvider.getID());
        actualProduct.setAmount(amount);
        try {
            actualProduct.commit(sge.getDatabase());
        } catch (SQLException ex) {
            sge.logger.error("No se han podido guardar los cambios en el producto {0}::{1}", actualProduct.getName(), actualProduct.getID());
            SGENotifier.displayError(this, "Error creando producto", "No se han podido guardar los cambios en el producto", ex);
            return;
        }

        try {
            for (AttributeTuple attributes : tableModel.getAll()) {
                InventoryAttribute attr = InventoryAttribute.getOrCreate(sge.getDatabase(), actualProduct, attributes.getKey());
                attr.setValue(attributes.getValue());
                attr.commit(sge.getDatabase());
            }
        } catch (SQLException ex) {
            sge.logger.error("No se han podido guardar los cambios del atributo en el producto {0}::{1}", actualProduct.getName(), actualProduct.getID());
            SGENotifier.displayError(this, "Error creando producto", "No se han podido guardar los cambios de los atributos en el producto", ex);
            return;
        }

        super.setVisible(false);
    }//GEN-LAST:event_buttonAcceptActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAccept;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonTableDelete;
    private javax.swing.JButton buttonTableNew;
    private javax.swing.JTextField inputAmount;
    private javax.swing.JTable inputAttributesTable;
    private javax.swing.JTextField inputCategoryName;
    private javax.swing.JTextField inputProductID;
    private javax.swing.JTextField inputProductName;
    private javax.swing.JTextField inputProviderID;
    private javax.swing.JComboBox<Provider> inputProviderName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
